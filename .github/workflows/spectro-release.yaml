name: Spectro Release
run-name: Release for Kube-VIP ${{ github.event.inputs.release_version }}
on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Version to Build'
        required: true
        default: '0.0.0'
      rel_type:
        type: choice
        description: Type of release
        options:
          - release
          - rc
jobs:
  builder:
    # edge-runner machine group is a bunch of machines in US Datacenter
    runs-on: ubuntu-latest
    # Initialize all secrets required for the job
    # Ensure that the credentials are provided as encrypted secrets
    env:
      SPECTRO_VERSION: ${{ github.event.inputs.release_version }}
      LEGACY_REGISTRY: us-docker.pkg.dev/palette-images/palette/kube-vip
      FIPS_REGISTRY: us-docker.pkg.dev/palette-images-fips/palette/kube-vip
    steps:
      -
        uses: mukunku/tag-exists-action@v1.2.0
        id: checkTag
        with:
          tag: spectro-v${{ github.event.inputs.release_version }}
      -
        if: ${{ steps.checkTag.outputs.exists == 'true' }}
        run: |
          echo "Tag already exists for spectro-v${{ github.event.inputs.release_version }}..."
          exit 1
      -
        if: ${{ github.event.inputs.rel_type == 'rc' }}
        run: |
          echo "LEGACY_REGISTRY=us-east1-docker.pkg.dev/spectro-images/dev/kube-vip" >> $GITHUB_ENV
          echo "FIPS_REGISTRY=us-east1-docker.pkg.dev/spectro-images/dev-fips/kube-vip" >> $GITHUB_ENV
      -
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to private registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      -
        name: Login to dev private registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.DEV_REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      -
        name: Build Image
        env:
          REGISTRY: ${{ env.LEGACY_REGISTRY }}
        run: |
          make docker
      -
        name: Build Image - FIPS Mode
        env:
          FIPS_ENABLE: yes
          REGISTRY: ${{ env.FIPS_REGISTRY }}
        run: |
          make docker
      -
        name: Create Release
        if: ${{ github.event.inputs.rel_type == 'release' }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: spectro-v${{ github.event.inputs.release_version }}
          release_name: Release spectro-v${{ github.event.inputs.release_version }}
          body: |
            Release version ${{ github.event.inputs.release_version }}
          draft: false
          prerelease: false

